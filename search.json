[
  {
    "objectID": "getting-started.html",
    "href": "getting-started.html",
    "title": "Getting started with Python",
    "section": "",
    "text": "In order to make full use of fairdatanow you need to be able to install Python packages and run Python code in Jupyter notebooks on your computer. The quickest and easiest way to get started with Jupyter notebooks is by downloading and installing the JupyterLab Desktop (JLD) installer for your operating system from the official github repository.\n\n\n\n\n\n\n\nNote\n\n\n\nThe first time you start JupyterLab Desktop you additionally need to install the default Python environment from the start menu. To do so you need to hoover and click on the word ‘install’ on the bottom of the start up screen.\n\n\nFinally you can install or update (with the -U option) the fairdatanow package from the Python Package index pypi.org by executing this command in a Jupyterlab terminal:\npip install -U fairdatanow \nFor more information about JupyterLab Desktop see the JLD user guide.\nThat is it! You now are ready to open up your explore (y)our Nextcloud data for your project.",
    "crumbs": [
      "Getting started with Python"
    ]
  },
  {
    "objectID": "an-image-processing-example.html",
    "href": "an-image-processing-example.html",
    "title": "An image processing example",
    "section": "",
    "text": "In the previous section we found and downloaded 28 tif files that we need to inspect and subsequently process. In this example for every imaged page of the falnama manuscript we need to stitch the upper and lower halves of the pages.\nfrom fairdatanow import RemoteData\nimport os \nimport re\n\n\n\n\n\n\n\n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nThis is the init_notebook_mode cell from ITables v2.4.3\n(you should not see this message - is your notebook trusted?)\nconfiguration = {\n    'url': \"https://laboppad.nl/falnama-project\", \n    'user':    os.getenv('NC_AUTH_USER'),\n    'password': os.getenv('NC_AUTH_PASS')\n}\nremote_data = RemoteData(configuration)\nremote_data.listdir(search_regex='edited.tif')\n\nPlease wait while scanning all file paths in remote folder...\nReady building file table for 'falnama-project'\nTotal number of files and directories: 6342\nTotal size of the files: 194.8 GiB\nLet’s take a look at the filenames.\nim_files = remote_data.download_selected()\ntitles = [re.sub('_Falnama.*', '', os.path.basename(f)) for f in im_files]\n\nReady with downloading 28 selected remote files to local cache: /home/frank/.cache/fairdatanow",
    "crumbs": [
      "An image processing example"
    ]
  },
  {
    "objectID": "an-image-processing-example.html#the-holoviews-way",
    "href": "an-image-processing-example.html#the-holoviews-way",
    "title": "An image processing example",
    "section": "The holoviews way",
    "text": "The holoviews way\nGiven these rather big files, we can use the awesome Python package holoviews to create an interactive visualization in a few lines of code in 15 seconds on my machine…\n\nimport imageio.v3 as iio\nimport holoviews as hv\nfrom holoviews.operation.datashader import rasterize \nimport panel as pn\n\n\nhv.extension('bokeh')\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n  \n  \n\n\n\n\n\n\n\n\nⓘ\n\n\n\n\n\npn.extension(sizing_mode='stretch_width')\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n# Read the 28 tif files into arrays \nims = [iio.imread(im_file) for im_file in im_files] \n\n# Convert into holoviews images\nhv_images = [hv.Image(im) for im in ims] \n\n# Rasterize to reduce size and speed up loading \nrasterized_ims = [rasterize(hv_im, width=500, height=500) for hv_im in hv_images] \n\n# Embed images in interactive viewer \nimage_panes = [pn.pane.HoloViews(raster_im.opts(xaxis=None, yaxis=None, cmap='gray', tools=['hover'], title=titles[i])) for i, raster_im in enumerate(rasterized_ims)]\n\n\n# Create a grid \n#xrays = pn.panel(pn.GridBox(*image_panes, ncols=6))\n\nxrays = pn.GridBox(*image_panes, ncols=6)\n\nxrays\n\n\n\n\n\n\n\n\n  \n\n\n\n\nThis is quite nice. We might improve this code by soft coding the height and width of the thumbnails somehow.",
    "crumbs": [
      "An image processing example"
    ]
  },
  {
    "objectID": "exploring-your-remote-data-in-breeze.html",
    "href": "exploring-your-remote-data-in-breeze.html",
    "title": "Exploring your remote data in a breeze",
    "section": "",
    "text": "In order to to make use of fairdatanow, you will need a Nextcloud server url, a user name and a password to access a folder on a Nextcloud server. The recommended way to use these credentials in Jupyter notebooks is to store username and password as environment variables on your system. You can retrieve them with the os.getenv() function. In this way you avoid typing them directly in the notebook, which is not save if you need to share these notebooks with others…\nTo get started you need to import the DataViewer class from the package and instantiate it with the Nextcloud configuration dictionary. Depending on the amount of files in the cloud storage it might take some time to build the interactive file table. In this example we want to create a table for 8118 files (and counting) from the Falnama project which takes about 12 seconds.\nGiven the complete overview of all data files in a project, you typically want find a subset of files for inspection further exploration. As an example let’s try to inspect the Infrared Reflectography (IRR) image tiles that were taken from page 71803-01 depicting the Moon. In order to filter these 6x6 specific image files (and exclude the .extra folder we need to use the following regular expression search pattern: '(?!.*\\\\.extra).*IRR-tiles.*Moon'.\nfrom fairdatanow import DataViewer\nimport os\nconfiguration = {\n    'url': \"https://laboppad.nl/falnama-project\", \n    'user':    os.getenv('NC_AUTH_USER'),\n    'password': os.getenv('NC_AUTH_PASS')\n}\nfilters = {'columns': ['path', 'size', 'modified', 'ext'],\n 'extensions': ['.tif'],\n 'search': '(?!.*\\\\.extra).*IRR-tiles.*Moon',\n 'show_directories': False,\n 'show_filters': False, \n 'use_regex': True}\ndv = DataViewer(configuration, **filters)\ndv\nlink\nBelow the filtered file table one can see that we have selected exactly 36 files out of 8118 files in the Nextcloud storage.\nWe can now download these files into a cache folder on your local computer in order to process them further. This can be done easily with the .download_filtered() method.\nfiles = dv.download_filtered()\n\nReady with downloading 36 selected remote files to local cache: /home/frank/.cache/fairdatanow\nThe file paths can now be inspected:\nfiles\n\n['/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0063.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0064.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0065.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0066.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0067.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0068.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0069.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0070.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0071.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0072.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0073.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0074.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0075.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0076.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0077.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0078.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0079.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0080.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0081.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0082.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0083.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0084.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0085.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0086.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0087.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0088.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0089.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0090.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0091.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0092.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0093.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0094.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0095.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0096.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0097.tif',\n '/home/frank/.cache/fairdatanow/falnama-project/07. Results/09. IRR/IRR-tiles/71803-01_IRR 1600 nm/71803-01_Moon_IR tiles_0098.tif']\nLet’s create a plot to see what they look like…\nimport matplotlib.pyplot as plt\nfig, axs = plt.subplots(nrows=6, ncols=6) \naxs = axs.flatten()\n\nfor ax, file in zip(axs, files):\n    im = plt.imread(file)\n    ax.imshow(im, cmap='Greys_r')\n    ax.axis('off')",
    "crumbs": [
      "Exploring your remote data in a breeze"
    ]
  },
  {
    "objectID": "exploring-your-remote-data-in-breeze.html#functions",
    "href": "exploring-your-remote-data-in-breeze.html#functions",
    "title": "Exploring your remote data in a breeze",
    "section": "FUNCTIONS",
    "text": "FUNCTIONS\n\nsource\n\nDataViewer\n\n DataViewer (configuration, subdir=None, verify=True, **params)\n\nCreate connection with a Nextcloud server and list the contents of a folder.\n\nsource\n\n\nto_iframe\n\n to_iframe (obj, html_filename, height='500px')\n\n*Save panel-like object as full HTML page html_filename in notefolder.\nIn this way it should be possible to preserve rich interactive visualizations directly in web pages.\nSee: https://panel.holoviz.org/reference/panes/HTML.html#html-documents*",
    "crumbs": [
      "Exploring your remote data in a breeze"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to fairdatanow",
    "section": "",
    "text": "Effective interdisciplinary cooperation in data science projects requires smooth access to both data and code. And with the recent development of two amazing open source frameworks (self hosted Nextcloud for data storage and Jupyter notebooks for computing), we are now in a position to actually make this happen. Recently our lab (the Rijkserfgoedlaboratorium in Amsterdam) has installed a Nextcloud server that gives our lab the possibility to share data files organized in project folders with research partners. These can be accessed manually via a web interface, but also programmatically with the webdav protocol! With fairdatanow we want to learn how to easily find en download data files from a Nextcloud storage directly in Jupyter notebooks in order to explore them and create visualizations.\nUnder the hood the fairdatanow makes use of the Nextcloud Python Framework nc-py-api for communication with the cloud server, and the powerful holoviz Python packages and for creating interactive tables.\nAlthough the package is still under construction it is already available for installation from the python package index.",
    "crumbs": [
      "Welcome to fairdatanow"
    ]
  }
]